buildscript {
    repositories {
        jcenter()
        maven {
            name "forge"
            url "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {

    id 'org.ajoberstar.grgit' version '3.1.1'
    id "com.matthewprenger.cursegradle" version "1.3.0"
    id 'java'
    id 'idea'
    id 'maven'
    id 'maven-publish'
}

defaultTasks 'fullBuild'

idea {
    module {
        // For some reason this is necessary for IDEA 2014 workspaces to recognize assets
        inheritOutputDirs = true
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name 'ForgeFS'
        url 'https://maven.minecraftforge.net'
    }
    maven {
        name 'amadornes'
        url 'https://maven.amadornes.com/'
    }
    maven {
        name 'prog'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'tesla'
        url 'https://maven.mcmoddev.com'
    }
    maven {
        name 'curseforge'
        url ''
    }
    maven {
        name 'opencomputers'
        url 'http://maven.cil.li/'
    }
    maven {
        name 'hwyla'
        url ''
    }
    maven {
        name 'CoFH Maven'
        url 'https://maven.covers1624.net'
    }
    maven {
        name 'buildcraft'
        url 'https://mod-buildcraft.com/maven/'
    }
    maven {
        name 'tterrag'
        url 'https://maven.tterrag.com/'
    }
    maven {
        name 'ic2'
        url 'http://maven.ic2.player.to'
    }
    maven {
        name 'BlameJared - Crafttweaker'
        url 'https://maven.blamejared.com/'
    }
    maven {
        name 'thiakil'
        url 'https://maven.thiakil.com'
    }
    maven {
        name = 'GitHub Maven'
        url = "https://jitpack.io"
    }
    maven {
        setUrl("https://maven.cleanroommc.com")
    }
    maven {
        name 'CB Maven'
        url "http://chickenbones.net/maven/"
    }
    maven {
        url = "https://cursemaven.com/"
    }
    maven {
        url = "https://modmaven.dev/"
    }
}

group = "mekanism"
version = "${minecraft_version}-${mod_version}." + (System.env.BUILD_NUMBER ?: "${homebaked}")
archivesBaseName = "MekanismAll"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
libsDirName = "../output"
distsDirName = "../output"

def explodedVersion = mod_version.split("\\.")

minecraft {
    version = "${minecraft_version}-${forge_version}"
    mappings = "${mappings_version}"
    runDir = "run"
    useDepAts = true

    replace '${version}', project.version
    replace 'new Version(999, 999, 999)', "new Version(${explodedVersion[0]}, ${explodedVersion[1]}, ${explodedVersion[2]})"
    replaceIn "Mekanism.java"
    replaceIn "MekanismGenerators.java"
    replaceIn "MekanismTools.java"
}

dependencies {
    compileOnly "org.jetbrains:annotations:${jb_annotations}"

    deobfCompile "MCMultiPart2:MCMultiPart:${mcmp_version}"
    compileOnly "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    compileOnly "net.darkhax.tesla:Tesla-${minecraft_version}:${tesla_version}"
    compileOnly "curse.maven:inventory-tweaks-223094:2923461"    // API
    compileOnly "curse.maven:inventory-tweaks-223094:2923462"    // deobf
    compileOnly "curse.maven:inventory-tweaks-223094:2923460"    // mod
    compileOnly "li.cil.oc:OpenComputers:MC${minecraft_version}-${opencomputers_version}:api"
    // Not updated yet
    compileOnly "mcp.mobius.waila:Hwyla:${hwyla_version}:api"
    deobfCompile "cofh:RedstoneFlux:1.12-${redstoneflux_version}:universal"
    compileOnly "com.mod-buildcraft:buildcraft-api:${buildcraft_version}"
    compileOnly "team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}:api"
    runtime "team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}"
  //  compileOnly "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
    compileOnly("CraftTweaker2:CraftTweaker2-API:${crafttweaker_version}") {
        exclude module: "asm-debug-all"
    }
    deobfCompile("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${crafttweaker_version}") {
        exclude module: "asm-debug-all"
    }
    compileOnly "dan200.computercraft:ComputerCraft:${computercraft_version}:api"
    compileOnly "mcjty.theoneprobe:TheOneProbe-1.12:${top_version}:api"
    /*
	compileOnly("appeng:appliedenergistics2:${ae2_version}:api") {
        exclude module: "jei_1.12.2"
    }
	*/
	compileOnly files("libs/appliedenergistics2-rv6-stable-7.jar")
    compileOnly files("libs/groovyscript-0.1.0-2023-1-13.jar")
   //runtime ("libs/groovyscript-0.2.0.jar")
    deobfCompile "zone.rong:mixinbooter:4.2"

    //compile "codechicken:CodeChickenLib:1.12.2-3.2.0.+:deobf"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mc_version": minecraft_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude '**/*.blend*'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

def setMainManifestProps = { Manifest manifest->
    manifest.attributes (
            'FMLAT': 'mekanism_at.cfg',
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'mekanism.coremod.MekanismCoremod'
    )
}

jar {
    manifest(setMainManifestProps)
}

task coreJar(type: Jar) {
    archiveName = "Mekanism-${project.version}.jar"
    dependsOn 'reobfJar'
    classifier "core"

    from('etc/core') {
        include '*.info'
        expand 'version':project.version,'mc_version':minecraft_version,'mcmp_version':mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        exclude 'mekanism/tools/**', 'mekanism/generators/**', 'assets/mekanismtools/**', 'assets/mekanismgenerators/**', 'mcmod.info'
    }

    manifest(setMainManifestProps)
}

task toolsJar(type: Jar) {
    archiveName = "MekanismTools-${project.version}.jar"
    dependsOn 'reobfJar'
    classifier "tools"

    from('etc/tools') {
        include '*.info'
        expand 'version':project.version,'mc_version':minecraft_version,'mcmp_version':mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'mekanism/tools/**', 'assets/mekanismtools/**'
    }
}

task generatorsJar(type: Jar) {
    archiveName = "MekanismGenerators-${project.version}.jar"
    dependsOn 'reobfJar'
    classifier "generators"

    from('etc/generators') {
        include '*.info'
        expand 'version':project.version,'mc_version':minecraft_version,'mcmp_version':mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'mekanism/generators/**', 'assets/mekanismgenerators/**'
    }
}

task apiJar(type: Jar) {
    classifier "api"
    baseName "Mekanism"
    dependsOn "sourceMainJava"
    include 'mekanism/api/**'
    from sourceSets.main.java.srcDirs
    from sourceSets.main.output
}

artifacts {
    archives apiJar
    archives coreJar
    archives toolsJar
    archives generatorsJar
}

task fullBuild(type: Delete) {
    delete jar
    dependsOn "build"
}

runClient {
    jvmArgs "-Dfml.coreMods.load=mekanism.coremod.MekanismCoremod"
    args '--username', 'sddsd2332'
}

runServer {
    jvmArgs "-Dfml.coreMods.load=mekanism.coremod.MekanismCoremod"
}

//Attempt to resolve GBK errors
tasks.withType(JavaCompile) {

options.encoding = "UTF-8"

}
